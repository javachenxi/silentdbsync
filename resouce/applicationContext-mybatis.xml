<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:config.properties" ignore-unresolvable="true" />

    <context:component-scan base-package="cn.com.dbsync.service" />

    <!-- 开启注解 -->
    <context:annotation-config />

    <!-- 使用数据库连接池注册数据源,引入相关的配置文件 -->
    <import resource="c3p0.xml"/>

    <bean id="dataSource" class="cn.com.dbsync.core.MyBatisDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry value-ref="dataSourcec3p0" key="MYSQL"></entry>
                <entry value-ref="dataSourcec3p0" key="ORACLE"></entry>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="dataSourcec3p0"></property>
    </bean>

    <bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties">
            <props>
                <prop key="Oracle">oracle</prop>
                <prop key="MySQL">mysql</prop>
            </props>
        </property>
    </bean>

    <bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
        <property name="properties" ref="vendorProperties" />
    </bean>


    <!-- 配置SqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:dbsync.mybatis/globalMapper.xml"/>
        <property name="databaseIdProvider" ref="databaseIdProvider" />
    </bean>

    <!-- 创建mybatis会话template -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- 通过扫描的模式，扫描目录在dbsync/mybatis目录下，
         所有的mapper都继承SqlMapper接口的接口，
         这样一个bean就可以了
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="dbsync.mybatis"/>
    </bean>     -->
</beans>